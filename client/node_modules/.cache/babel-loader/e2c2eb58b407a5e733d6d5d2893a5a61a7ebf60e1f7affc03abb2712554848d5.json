{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React\\\\Beginners\\\\ToDoList\\\\todo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for storing the list of todos\n  const [todos, setTodos] = useState([]);\n  // State for storing the current input task\n  const [task, setTask] = useState(\"\");\n  // Port number for the API server\n  const port = 1433;\n\n  // Function to add a new task\n  const addTask = () => {\n    if (task !== \"\") {\n      fetch(`http://localhost:${port}/api/tasks`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          task\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data.message);\n        console.log(data.taskId);\n        // Update the todos state array with the new task\n        setTodos([...todos, {\n          id: data.taskId,\n          description: task\n        }]);\n        // Reset the task input field\n        setTask(\"\");\n      }).catch(error => console.error(\"Error:\", error));\n    }\n  };\n\n  // Function to delete a task based on its ID\n  const deleteTask = id => {\n    fetch(`http://localhost:${port}/api/tasks/${id}`, {\n      method: \"DELETE\"\n    }).then(response => response.json()).then(data => {\n      console.log(data.message);\n      // Filter out the deleted task from the todos state array\n      setTodos(todos.filter(todo => todo.id !== id));\n    }).catch(error => console.error(\"Error:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ToDo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: task,\n          onChange: e => setTask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: todos.map(todo =>\n          /*#__PURE__*/\n          // Render each todo as a list item with a unique key\n          _jsxDEV(\"li\", {\n            children: [todo.description, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(todo.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z7Fs1gOfIdzldo9qo4fGVTrdpN0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","App","_s","todos","setTodos","task","setTask","port","addTask","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","message","taskId","id","description","catch","error","deleteTask","filter","todo","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["D:/Projects/React/Beginners/ToDoList/todo-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar.js\";\n\nfunction App() {\n  // State for storing the list of todos\n  const [todos, setTodos] = useState([]);\n  // State for storing the current input task\n  const [task, setTask] = useState(\"\");\n  // Port number for the API server\n  const port = 1433;\n\n  // Function to add a new task\n  const addTask = () => {\n    if (task !== \"\") {\n      fetch(`http://localhost:${port}/api/tasks`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ task }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data.message);\n          console.log(data.taskId);\n          // Update the todos state array with the new task\n          setTodos([...todos, { id: data.taskId, description: task }]);\n          // Reset the task input field\n          setTask(\"\");\n        })\n        .catch((error) => console.error(\"Error:\", error));\n    }\n  };\n\n  // Function to delete a task based on its ID\n  const deleteTask = (id) => {\n    fetch(`http://localhost:${port}/api/tasks/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data.message);\n        // Filter out the deleted task from the todos state array\n        setTodos(todos.filter((todo) => todo.id !== id));\n      })\n      .catch((error) => console.error(\"Error:\", error));\n  };\n\n  return (\n    <div>\n      <Navbar></Navbar> {/* Navigation bar component */}\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>ToDo List</h1>\n          <input\n            type=\"text\"\n            value={task}\n            onChange={(e) => setTask(e.target.value)}\n          />\n          <button onClick={addTask}>Add Task</button>\n          <ul>\n            {todos.map((todo) => (\n              // Render each todo as a list item with a unique key\n              <li key={todo.id}>\n                {todo.description}\n                <button onClick={() => deleteTask(todo.id)}>Delete</button>\n              </li>\n            ))}\n          </ul>\n        </header>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}