{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React\\\\Beginners\\\\ToDoList\\\\todo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to store the list of tasks\n  const [todos, setTodos] = useState([]);\n  // State to store the current input value for a new task\n  const [task, setTask] = useState(\"\");\n  // Port number for the API (typically not recommended to hardcode unless necessary)\n  const port = 1433;\n\n  // Fetch the list of tasks from the API when the component mounts\n  useEffect(() => {\n    fetch(`http://localhost:${port}/api/tasks`).then(response => response.json()).then(data => {\n      // Assuming the API returns an array of tasks\n      setTodos(data);\n    }).catch(error => console.error(\"Error fetching tasks:\", error));\n  }, [port]);\n\n  // Function to add a new task\n  const addTask = () => {\n    if (task !== \"\") {\n      fetch(`http://localhost:${port}/api/tasks`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          description: task\n        })\n      }).then(response => response.json()).then(data => {\n        // Assuming the API returns the newly created task's ID\n        setTodos([...todos, {\n          id: data.taskId,\n          description: task\n        }]);\n        setTask(\"\"); // Clear the input field after adding the task\n      }).catch(error => console.error(\"Error:\", error));\n    }\n  };\n\n  // Function to delete a task by its ID\n  const deleteTask = id => {\n    fetch(`http://localhost:${port}/api/tasks/${id}`, {\n      method: \"DELETE\"\n    }).then(response => response.json()).then(() => {\n      // Remove the deleted task from the state\n      setTodos(todos.filter(todo => todo.id !== id));\n    }).catch(error => console.error(\"Error:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ToDo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: task,\n          onChange: e => setTask(e.target.value),\n          placeholder: \"Enter a new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [todo.description, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(todo.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8uSPNJ0HQIDsw6UkxFt6kBcjIzU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","App","_s","todos","setTodos","task","setTask","port","fetch","then","response","json","data","catch","error","console","addTask","method","headers","body","JSON","stringify","description","id","taskId","deleteTask","filter","todo","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["D:/Projects/React/Beginners/ToDoList/todo-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar.js\";\n\nfunction App() {\n  // State to store the list of tasks\n  const [todos, setTodos] = useState([]);\n  // State to store the current input value for a new task\n  const [task, setTask] = useState(\"\");\n  // Port number for the API (typically not recommended to hardcode unless necessary)\n  const port = 1433;\n\n  // Fetch the list of tasks from the API when the component mounts\n  useEffect(() => {\n    fetch(`http://localhost:${port}/api/tasks`)\n      .then(response => response.json())\n      .then(data => {\n        // Assuming the API returns an array of tasks\n        setTodos(data);\n      })\n      .catch(error => console.error(\"Error fetching tasks:\", error));\n  }, [port]);\n\n  // Function to add a new task\n  const addTask = () => {\n    if (task !== \"\") {\n      fetch(`http://localhost:${port}/api/tasks`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ description: task }),\n      })\n        .then(response => response.json())\n        .then(data => {\n          // Assuming the API returns the newly created task's ID\n          setTodos([...todos, { id: data.taskId, description: task }]);\n          setTask(\"\"); // Clear the input field after adding the task\n        })\n        .catch(error => console.error(\"Error:\", error));\n    }\n  };\n\n  // Function to delete a task by its ID\n  const deleteTask = (id) => {\n    fetch(`http://localhost:${port}/api/tasks/${id}`, {\n      method: \"DELETE\",\n    })\n      .then(response => response.json())\n      .then(() => {\n        // Remove the deleted task from the state\n        setTodos(todos.filter(todo => todo.id !== id));\n      })\n      .catch(error => console.error(\"Error:\", error));\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>ToDo List</h1>\n          <input\n            type=\"text\"\n            value={task}\n            onChange={(e) => setTask(e.target.value)}\n            placeholder=\"Enter a new task\"\n          />\n          <button onClick={addTask}>Add Task</button>\n          <ul>\n            {todos.map((todo) => (\n              <li key={todo.id}>\n                {todo.description}\n                <button onClick={() => deleteTask(todo.id)}>Delete</button>\n              </li>\n            ))}\n          </ul>\n        </header>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA,MAAMW,IAAI,GAAG,IAAI;;EAEjB;EACAV,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,oBAAoBD,IAAI,YAAY,CAAC,CACxCE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAR,QAAQ,CAACQ,IAAI,CAAC;IAChB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMS,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIX,IAAI,KAAK,EAAE,EAAE;MACfG,KAAK,CAAC,oBAAoBD,IAAI,YAAY,EAAE;QAC1CU,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,WAAW,EAAEjB;QAAK,CAAC;MAC5C,CAAC,CAAC,CACCI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZ;QACAR,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;UAAEoB,EAAE,EAAEX,IAAI,CAACY,MAAM;UAAEF,WAAW,EAAEjB;QAAK,CAAC,CAAC,CAAC;QAC5DC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMW,UAAU,GAAIF,EAAE,IAAK;IACzBf,KAAK,CAAC,oBAAoBD,IAAI,cAAcgB,EAAE,EAAE,EAAE;MAChDN,MAAM,EAAE;IACV,CAAC,CAAC,CACCR,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAC,MAAM;MACV;MACAL,QAAQ,CAACD,KAAK,CAACuB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;IAChD,CAAC,CAAC,CACDV,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACnD,CAAC;EAED,oBACEd,OAAA;IAAA4B,QAAA,gBACE5B,OAAA,CAACF,MAAM;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVhC,OAAA;MAAKiC,SAAS,EAAC,KAAK;MAAAL,QAAA,eAClB5B,OAAA;QAAQiC,SAAS,EAAC,YAAY;QAAAL,QAAA,gBAC5B5B,OAAA;UAAA4B,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBhC,OAAA;UACEkC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE9B,IAAK;UACZ+B,QAAQ,EAAGC,CAAC,IAAK/B,OAAO,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACzCI,WAAW,EAAC;QAAkB;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,eACFhC,OAAA;UAAQwC,OAAO,EAAExB,OAAQ;UAAAY,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3ChC,OAAA;UAAA4B,QAAA,EACGzB,KAAK,CAACsC,GAAG,CAAEd,IAAI,iBACd3B,OAAA;YAAA4B,QAAA,GACGD,IAAI,CAACL,WAAW,eACjBtB,OAAA;cAAQwC,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAACE,IAAI,CAACJ,EAAE,CAAE;cAAAK,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GAFpDL,IAAI,CAACJ,EAAE;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGZ,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9B,EAAA,CA7EQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AA+EZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}